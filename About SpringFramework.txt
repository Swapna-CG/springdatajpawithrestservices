What is Framework?

A basic structure for creating a system. or A format for completing the task.

EssayWriting?

Topics
Introduction
Explanation
conclusion
moral

With and With out Framework?

Without Framework = semi-furnished
with Framework => fully furnished (Co-living spaces)


What is Software Framework?
An abstract using which a software can be developed
Providing a generic functionality,can be selectively changed according to the project.


Some software frameworks are 

.Net
Django (Python Web Framework)
Hibernate (ORM Framework for java)
Spring (Java Framework for enterprise applications) => Loose Coupling => reusable and testable code can be developed easily
Struts (Java Framework used for views) using mvc architecture => tight Coupling
etc.,

What is Spring Framework?
Java Based Application Framework
Developed by Rod Johnson in 2003.

Spring supports RAD => Rapid Application Development
Spring is lightweight framework
Spring provides an infrastructure to support application development
Spring focuses on infrastructure of the application,developer can focus on application development
Spring encourages the modular programming(layered architecture)
Spring uses the POJO classes(Bean classes)/ (Plain Old Java Objects) like Employee,Customer,Department etc.,
pring (Java Framework for enterprise applications) => Loose Coupling => Inversion Of Control => Dependency Injection => Design Pattern
Spring IOC Container is used for creating,managing and destroying the beans(objects)
by reading/scanning the XML or annotation or java based configuration

Two Types of Spring IOC Container

BeanFactory
ApplicationContext

What is IOC?

IOC is a design pattern.Dependency Injection

What is Dependency Injection?

DI is a process where objects define dependencies with other objects .

Types of Dependency Injection:

constructor based dependency injection
setter based dependency injection

Advantages of DI:
==============
DeCoupling : code with the cleaner with DI principle
Easier to test

what is difference between BeanFactory vs ApplicationContext?

Practice program on DI
===================
Shape => interface with area Method
implement this interface in different classes like Rectangle,Square,Circle etc.,
And inject the dependency using 
field
constructor
setter

Bean Scopes in Spring framework
============================
singleton
prototype
request
session
application
websocket

Spring MVC
============
M - Model
V - View
C - Controller


org.springframework.web.servlet.view.InternalResourceViewResolver
===========================================================
Convenient subclass of UrlBasedViewResolver that supports InternalResourceView (i.e. Servlets and JSPs) and subclassessuch as JstlView. 

The view class for all views generated by this resolver can be specifiedvia setViewClass. See UrlBasedViewResolver's javadoc for details.The default is InternalResourceView, or JstlView if the JSTL API is present. 

Example:
=======
resolver.setViewClass(JstlView.class);

BTW, it's good practice to put JSP files that just serve as views under WEB-INF, to hide them from direct access (e.g. via a manually entered URL).Only controllers will be able to access them then. 

Example:
=======
resolver.setPrefix("/WEB-INF/views");

Note: When chaining ViewResolvers, an InternalResourceViewResolver always needs to be last, as it will attempt to resolve any view name,no matter whether the underlying resource actually exists.



org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer
==============================================================================

WebApplicationInitializerto register a DispatcherServlet and use Java-based Spring configuration. 

Implementations are required to implement: 
•getRootConfigClasses() -- for "root" application context (non-webinfrastructure) configuration. 
•getServletConfigClasses() -- for DispatcherServletapplication context (Spring MVC infrastructure) configuration. 


org.springframework.ui.Model
============================
Java-5-specific interface that defines a holder for model attributes.Primarily designed for adding attributes to the model.Allows for accessing the overall model as a java.util.Map
